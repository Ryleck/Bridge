/**
 * Created by Phil on 2016-01-31.
 */

var partie = [];
var table = [];
var planchette = [];
var tableau = require('../tableau/tableau');

module.exports = {

    ajouterPlanchette: function(t, eNS, eEO, pl){
        planchette = [];

        table = partie[parseInt(t)-1];

        planchette.push(pl);
        planchette.push(eNS);
        planchette.push(eEO);
        planchette.push(0);
        planchette.push(0);
        planchette.push(0);
        planchette.push(0);

        table.push(planchette);

        partie[parseInt(t)-1] = table;

        //console.log(partie);
    },

    ajouterBreak: function(t){
        planchette = [];
        table = partie[parseInt(t)-1];
        table.push("FINR");
        partie[parseInt(t)-1] = table;
    },

    ajouteTable: function(t){
        table = [];
        table.push("table "+ t);
        partie.push(table);
        //console.log(partie);
    },
    //retournePlanchette

    initPartie: function(){
        partie = [];
    },

    initTable: function(t){
        table = [];
        table.push("table "+ t);
        partie[parseInt(t)-1] = table;
    },
    getPlNb: function(indice){
        return '1';
    },
    getEquipeNS: function(indice){
        return 'A';
    },
    getEquipeEO: function(indice){
        return 'B';
    },
    getVul: function(indice){
        return 3;
    },
    getPlanchette: function(t, pl){
        table = partie[parseInt(t)-1];

        return table[parseInt(pl)];
    },
    getPartie: function(){
        return partie;
    },
    getPlJouee: function(t, pl, eNS, eEO){
        var vTable = partie[parseInt(t)-1];
        for (i = 0; i < vTable.length; i++){
            if((vTable[i][0] == parseInt(pl)) && (vTable[i][1] == eNS) && (vTable[i][2] == eEO) && (vTable[i][6] == 1)){
                return true;
            }
        }
        return false;
    },
    setPlJouee: function(t, pl, eNS, eEO){
        var vTable = partie[parseInt(t)-1];
        for (i = 0; i < vTable.length; i++){
            if((vTable[i][0] == parseInt(pl)) && (vTable[i][1] == eNS) && (vTable[i][2] == eEO)){
                vTable[i][6] = 1;
            }
        }
    },
    setScore: function(t, pl, s){

        table = partie[parseInt(t)-1];

        table[parseInt(pl)][3] = s;
        table[parseInt(pl)][6] = 1;

        partie[parseInt(t)-1] = table;
    },
    compilerResultatsDuplicata: function(fantome){
        //var nbPL = parseInt(tableau.retourneNombrePlanchette());
        //var nbPlj = (parseInt(tableau.retourneNombreDEquipe())/2);
        var nbTable = partie.length;
        //var tResulTemp = [];
        var tResul = [];
        var tPl = [];
        var score = 0;
        var sNS = 0;
        var sEO = 0;
        var nbE = tableau.retourneNombreDEquipe();
        var nbF1PlJ = 0;
        var tNbF1PlJ = [];


        if(fantome == true){
            nbF1PlJ = Math.floor((parseInt(nbE)-1)/2);
        }else{
            nbF1PlJ = parseInt(nbE)/2;
        }

        for(noTable = 0; noTable < nbTable; noTable++){
            for(j = 1; j < partie[noTable].length; j++) {
                tResul.push(partie[noTable][j]);
            }

        }

        var nbPl = parseInt(tResul.length);

        for(i = 0; i < tableau.retourneNombrePlanchette(); i++){
            tNbF1PlJ.push(0);
        }

        for(i = 0; i < nbPl; i++){
            tPl = tResul[i];
            score = parseInt(tPl[3]);
            /*if(){
                tNbF1PlJ[parseInt(tPl[0])-1] = tNbF1PlJ[parseInt(tPl[0])-1] + 1;
            }*/
            //console.log(tPl[6]);
            for (j = 0; j < nbPl; j++) {
                if (i != j) {
                    if (tPl[0] === tResul[j][0]) {

                        /***********************************/
                        /************ IMPORTANT ************/
                        /***********************************/

                        if (score > parseInt(tResul[j][3])) {
                            sNS = sNS + 1;
                            if ((fantome == true) && (nbTable === 3)) {
                                sNS = sNS + 1;
                            } else if ((fantome == true) && (nbTable === 4)) {
                                sNS = sNS + 0.5;
                            }
                        } else if (score == parseInt(tResul[j][3])) {
                            sNS = sNS + 0.5;
                            sEO = sEO + 0.5;
                            if ((fantome == true) && (nbTable === 3)) {
                                sNS = sNS + 0.5;
                                sEO = sEO + 0.5;
                            } else if ((fantome == true) && (nbTable === 4)) {
                                sNS = sNS + 0.25;
                                sEO = sEO + 0.25;
                            }
                        } else {
                            sEO = sEO + 1;
                            if ((fantome == true) && (nbTable === 3)) {
                                sEO = sEO + 1;
                            } else if ((fantome == true) && (nbTable === 4)) {
                                sEO = sEO + 0.5;
                            }
                        }

                        /***********************************/
                        /************ IMPORTANT ************/
                        /***********************************/
                    }
                }
            }


            //tResul = tResulTemp;
            tResul[i][4] = sNS;
            tResul[i][5] = sEO;
            tableau.ecrireScore(tResul[i]);
            sNS = 0;
            sEO = 0;
        }
        /*console.log("***** Resultat *****");
        console.log(tResul);
        console.log("***** *****");*/
    }
}